generator client {
  provider = "prisma-client-js"
  previewFeatures = ["clientExtensions", "postgresqlExtensions"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
  extensions      = [pgcrypto]
}

model booking {
  id         String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  start_date DateTime @db.Timestamp(6)
  end_date   DateTime @db.Timestamp(6)
  user_id    String   @db.Uuid
  room_id    String   @db.Uuid
  status     String   @db.VarChar(30)
  created_at DateTime @default(now()) @db.Timestamp(6)
  updated_at DateTime @default(now()) @db.Timestamp(6)
  room       room     @relation(fields: [room_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  user       user     @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model hotel {
  id          String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  name        String   @db.VarChar(100)
  address     String   @db.VarChar(255)
  city        String   @db.VarChar(50)
  country     String   @db.VarChar(50)
  provider_id String   @db.Uuid
  created_at  DateTime @default(now()) @db.Timestamp(6)
  updated_at  DateTime @default(now()) @db.Timestamp(6)
  provider    provider @relation(fields: [provider_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  review      review[]
  room        room[]
}

model provider {
  id          String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  description String?  @db.VarChar(255)
  address     String?  @db.VarChar(255)
  city        String?  @db.VarChar(50)
  country     String?  @db.VarChar(50)
  name        String   @db.VarChar(255)
  created_at  DateTime @default(now()) @db.Timestamp(6)
  updated_at  DateTime @default(now()) @db.Timestamp(6)
  user_id     String   @db.Uuid
  tenant_id   String   @db.VarChar(255)
  mobile      String?  @db.VarChar(255)
  hotel       hotel[]
  user        user     @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model review {
  id         String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  rating     Int
  comment    String?  @db.VarChar(255)
  user_id    String   @db.Uuid
  hotel_id   String   @db.Uuid
  created_at DateTime @default(now()) @db.Timestamp(6)
  updated_at DateTime @default(now()) @db.Timestamp(6)
  hotel      hotel    @relation(fields: [hotel_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  user       user     @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model room {
  id          String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  room_number Int
  room_type   String    @db.VarChar(50)
  price       Int
  hotel_id    String    @db.Uuid
  created_at  DateTime  @default(now()) @db.Timestamp(6)
  updated_at  DateTime  @default(now()) @db.Timestamp(6)
  booking     booking[]
  hotel       hotel     @relation(fields: [hotel_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model user {
  id          String     @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  email       String     @unique @db.VarChar(255)
  firstName   String?    @db.VarChar(255)
  lastName    String?    @db.VarChar(255)
  roq_user_id String     @db.VarChar(255)
  tenant_id   String     @db.VarChar(255)
  created_at  DateTime   @default(now()) @db.Timestamp(6)
  updated_at  DateTime   @default(now()) @db.Timestamp(6)
  booking     booking[]
  provider    provider[]
  review      review[]
}
